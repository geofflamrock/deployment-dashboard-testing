name: Create deployments with GitHub App

on:
  pull_request:
    branches: ["main"]

  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "development"

      deployment_status:
        description: "Status of the deployment"
        required: true
        default: success
        type: choice
        options:
          - success
          - error
          - failure
          - inactive
          - in_progress
          - queued
          - pending

      environment_url:
        description: "URL of the environment"
        required: true
        default: https://example.com

      log_url:
        description: "URL of the deployment logs"
        required: true
        default: https://team-github.testoctopus.app

jobs:
  deploy:
    name: Create deployment with GitHub App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get environment name
        id: get-environment-name
        run: "echo environment=${{ github.event_name == 'pull_request' && format('pr-', github.event.pull_request.number) || inputs.environment }} >> $GITHUB_OUTPUT"

      - name: Get deployment status
        id: get-deployment-status
        run: "echo status=${{ github.event_name == 'pull_request' && 'success' || inputs.deployment_status }} >> $GITHUB_OUTPUT"

      - name: Get log url
        id: get-log-url
        run: "echo log_url=${{ github.event_name == 'pull_request' && 'https://team-github.testoctopus.app' || inputs.log_url }} >> $GITHUB_OUTPUT"

      - name: Get environment url
        id: get-environment-url
        run: "echo environment_url=${{ github.event_name == 'pull_request' && 'https://example.com' || inputs.environment_url }} >> $GITHUB_OUTPUT"

      - name: Create deployment
        id: create-deployment
        run: 'echo deploymentid=$(gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${{ github.repository }}/deployments -F "ref=${{ github.event.pull_request.head.sha || github.sha }}" -F "description=Deployed by Octopus" -F "environment=${{ steps.get-environment-name.outputs.environment }}" -F "auto_merge=false" --jq ".id")  >> $GITHUB_OUTPUT'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Set deployment status
        run: 'gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${{ github.repository }}/deployments/${{ steps.create-deployment.outputs.deploymentid }}/statuses -f "environment=${{ steps.get-environment-name.outputs.environment }}" -f "state=${{ steps.get-deployment-status.outputs.status }}" -f "log_url=${{ steps.get-log-url.outputs.log_url }}" -f "description=Deployment to environment ${{ steps.create-deployment.outputs.deploymentid }}." -f "environment_url=${{ steps.get-environment-url.outputs.environment_url }}" -F "auto_inactive=false"'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
